// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Dialog> renders 1`] = `
<View
  collapsable={undefined}
  pointerEvents="none"
  style={
    Object {
      "alignContent": "center",
      "alignItems": "center",
      "backgroundColor": "rgba(0,0,0, 0.5)",
      "height": "100%",
      "justifyContent": "center",
      "left": 0,
      "opacity": 0,
      "position": "absolute",
      "top": 0,
      "width": "100%",
      "zIndex": 2,
    }
  }
>
  <View
    collapsable={undefined}
    style={
      Object {
        "backgroundColor": "#ffffff",
        "borderRadius": 3,
        "bottom": -1334,
        "maxHeight": "65%",
        "minWidth": "35%",
        "shadowColor": "#000000",
        "shadowOffset": Object {
          "height": 2,
          "width": 0,
        },
        "shadowOpacity": 0.26,
        "shadowRadius": 5,
      }
    }
  >
    <RCTScrollView
      onScroll={[Function]}
      style={
        Object {
          "flex": 1,
          "paddingHorizontal": 16,
        }
      }
    >
      <View />
    </RCTScrollView>
    <View
      style={
        Object {
          "alignContent": "flex-end",
          "alignItems": "flex-end",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "flex-end",
          "padding": 16,
        }
      }
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "borderRadius": 3,
            "margin": 5,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          style={
            Object {
              "alignContent": "center",
              "alignItems": "center",
              "backgroundColor": "#4a4a4a",
              "borderRadius": 3,
              "display": "flex",
              "flexDirection": "row",
              "height": 45,
              "justifyContent": "center",
              "paddingHorizontal": 30,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "#ffffff",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontWeight": "600",
              }
            }
          >
            Close
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`<Dialog> when {title} 1`] = `
<View
  collapsable={undefined}
  pointerEvents="none"
  style={
    Object {
      "alignContent": "center",
      "alignItems": "center",
      "backgroundColor": "rgba(0,0,0, 0.5)",
      "height": "100%",
      "justifyContent": "center",
      "left": 0,
      "opacity": 0,
      "position": "absolute",
      "top": 0,
      "width": "100%",
      "zIndex": 2,
    }
  }
>
  <View
    collapsable={undefined}
    style={
      Object {
        "backgroundColor": "#ffffff",
        "borderRadius": 3,
        "bottom": -1334,
        "maxHeight": "65%",
        "minWidth": "35%",
        "shadowColor": "#000000",
        "shadowOffset": Object {
          "height": 2,
          "width": 0,
        },
        "shadowOpacity": 0.26,
        "shadowRadius": 5,
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#4a4a4a",
          "fontFamily": undefined,
          "fontSize": 20,
          "fontWeight": "bold",
          "padding": 16,
        }
      }
    >
      Hello world
    </Text>
    <RCTScrollView
      onScroll={[Function]}
      style={
        Object {
          "flex": 1,
          "paddingHorizontal": 16,
        }
      }
    >
      <View />
    </RCTScrollView>
    <View
      style={
        Object {
          "alignContent": "flex-end",
          "alignItems": "flex-end",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "flex-end",
          "padding": 16,
        }
      }
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "borderRadius": 3,
            "margin": 5,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          style={
            Object {
              "alignContent": "center",
              "alignItems": "center",
              "backgroundColor": "#4a4a4a",
              "borderRadius": 3,
              "display": "flex",
              "flexDirection": "row",
              "height": 45,
              "justifyContent": "center",
              "paddingHorizontal": 30,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "#ffffff",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontWeight": "600",
              }
            }
          >
            Close
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`<Dialog> when {visible} 1`] = `
<View
  collapsable={undefined}
  pointerEvents="auto"
  style={
    Object {
      "alignContent": "center",
      "alignItems": "center",
      "backgroundColor": "rgba(0,0,0, 0.5)",
      "height": "100%",
      "justifyContent": "center",
      "left": 0,
      "opacity": 1,
      "position": "absolute",
      "top": 0,
      "width": "100%",
      "zIndex": 2,
    }
  }
>
  <View
    collapsable={undefined}
    style={
      Object {
        "backgroundColor": "#ffffff",
        "borderRadius": 3,
        "bottom": 0,
        "maxHeight": "65%",
        "minWidth": "35%",
        "shadowColor": "#000000",
        "shadowOffset": Object {
          "height": 2,
          "width": 0,
        },
        "shadowOpacity": 0.26,
        "shadowRadius": 5,
      }
    }
  >
    <RCTScrollView
      onScroll={[Function]}
      style={
        Object {
          "flex": 1,
          "paddingHorizontal": 16,
        }
      }
    >
      <View />
    </RCTScrollView>
    <View
      style={
        Object {
          "alignContent": "flex-end",
          "alignItems": "flex-end",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "flex-end",
          "padding": 16,
        }
      }
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "borderRadius": 3,
            "margin": 5,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          style={
            Object {
              "alignContent": "center",
              "alignItems": "center",
              "backgroundColor": "#4a4a4a",
              "borderRadius": 3,
              "display": "flex",
              "flexDirection": "row",
              "height": 45,
              "justifyContent": "center",
              "paddingHorizontal": 30,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "#ffffff",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontWeight": "600",
              }
            }
          >
            Close
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;
