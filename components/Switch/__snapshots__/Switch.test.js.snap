// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Switch> renders 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "alignSelf": "flex-end",
        "display": "flex",
        "flexDirection": "row",
        "height": 44,
        "marginBottom": 22,
      },
      undefined,
    ]
  }
>
  <RCTSwitch
    activeThumbColor="#ffffff"
    activeTrackColor="#10c0bc"
    disabled={false}
    onChange={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onValueChange={undefined}
    style={
      Array [
        Object {
          "height": 31,
          "width": 51,
        },
        Object {
          "height": 28,
        },
      ]
    }
    thumbColor="#ffffff"
    trackColor="#cdd2d4"
    value={false}
  />
</View>
`;

exports[`<Switch> when {color} 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "alignSelf": "flex-end",
        "display": "flex",
        "flexDirection": "row",
        "height": 44,
        "marginBottom": 22,
      },
      undefined,
    ]
  }
>
  <RCTSwitch
    activeThumbColor="#ffffff"
    activeTrackColor="green"
    disabled={false}
    onChange={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onValueChange={undefined}
    style={
      Array [
        Object {
          "height": 31,
          "width": 51,
        },
        Object {
          "height": 28,
        },
      ]
    }
    thumbColor="#ffffff"
    trackColor="#cdd2d4"
    value={true}
  />
</View>
`;

exports[`<Switch> when {disabled} 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "alignSelf": "flex-end",
        "display": "flex",
        "flexDirection": "row",
        "height": 44,
        "marginBottom": 22,
      },
      undefined,
    ]
  }
>
  <RCTSwitch
    activeThumbColor="#ffffff"
    activeTrackColor="#10c0bc"
    disabled={false}
    onChange={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onValueChange={undefined}
    style={
      Array [
        Object {
          "height": 31,
          "width": 51,
        },
        Object {
          "height": 28,
        },
      ]
    }
    thumbColor="#ffffff"
    trackColor="#cdd2d4"
    value={false}
    visible={true}
  />
</View>
`;

exports[`<Switch> when {label} 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "alignSelf": "flex-end",
        "display": "flex",
        "flexDirection": "row",
        "height": 44,
        "marginBottom": 22,
      },
      undefined,
    ]
  }
>
  <RCTSwitch
    activeThumbColor="#ffffff"
    activeTrackColor="#10c0bc"
    disabled={false}
    onChange={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onValueChange={undefined}
    style={
      Array [
        Object {
          "height": 31,
          "width": 51,
        },
        Object {
          "height": 28,
        },
      ]
    }
    thumbColor="#ffffff"
    trackColor="#cdd2d4"
    value={false}
  />
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={
      Array [
        Object {
          "color": "#4a4a4a",
          "fontFamily": undefined,
          "fontWeight": "400",
          "textAlignVertical": "center",
        },
        Object {
          "fontFamily": undefined,
          "fontSize": 14,
          "fontWeight": "600",
          "lineHeight": 16,
        },
        Object {
          "color": "#707070",
        },
        Object {
          "marginBottom": 0,
          "marginLeft": 10,
        },
      ]
    }
  >
    Hello world
  </Text>
</View>
`;

exports[`<Switch> when {style} 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "alignSelf": "flex-end",
        "display": "flex",
        "flexDirection": "row",
        "height": 44,
        "marginBottom": 22,
      },
      Object {
        "backgroundColor": "orange",
      },
    ]
  }
>
  <RCTSwitch
    activeThumbColor="#ffffff"
    activeTrackColor="#10c0bc"
    disabled={false}
    onChange={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onValueChange={undefined}
    style={
      Array [
        Object {
          "height": 31,
          "width": 51,
        },
        Object {
          "height": 28,
        },
      ]
    }
    thumbColor="#ffffff"
    trackColor="#cdd2d4"
    value={false}
  />
</View>
`;
