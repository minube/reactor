// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<InputPicker> renders 1`] = `
<View
  style={
    Array [
      Object {
        "marginBottom": 10,
        "overflow": "hidden",
      },
      undefined,
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#ffffff",
          "borderColor": "#e0e0e0",
          "borderRadius": 2.5,
          "borderWidth": 1,
          "paddingRight": 5,
          "width": "100%",
        },
        undefined,
        false,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
            "height": "auto",
          },
          false,
        ]
      }
    >
      <RCTPicker
        items={Array []}
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        selectedIndex={0}
        style={
          Array [
            Object {
              "height": 216,
            },
            undefined,
          ]
        }
      />
    </View>
  </View>
</View>
`;

exports[`<InputPicker> when {disabled} 1`] = `
<View
  style={
    Array [
      Object {
        "marginBottom": 10,
        "overflow": "hidden",
      },
      undefined,
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#ffffff",
          "borderColor": "#e0e0e0",
          "borderRadius": 2.5,
          "borderWidth": 1,
          "paddingRight": 5,
          "width": "100%",
        },
        false,
        Object {
          "backgroundColor": "#F5F5F6",
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
            "height": "auto",
          },
          undefined,
        ]
      }
    >
      <RCTPicker
        items={Array []}
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        selectedIndex={0}
        style={
          Array [
            Object {
              "height": 216,
            },
            undefined,
          ]
        }
      />
    </View>
  </View>
</View>
`;

exports[`<InputPicker> when {error} 1`] = `
<View
  style={
    Array [
      Object {
        "marginBottom": 10,
        "overflow": "hidden",
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "#4a4a4a",
            "fontFamily": undefined,
            "fontWeight": "400",
            "textAlignVertical": "center",
          },
          Object {
            "fontSize": 14,
            "lineHeight": 24,
          },
          Object {
            "color": "#9b9b9b",
          },
          Object {},
        ]
      }
    />
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "#4a4a4a",
            "fontFamily": undefined,
            "fontWeight": "400",
            "textAlignVertical": "center",
          },
          Object {
            "fontSize": 12,
            "lineHeight": 17,
          },
          Object {
            "color": "#9b9b9b",
          },
          Object {
            "color": "#ef5160",
          },
        ]
      }
    >
      Hello World
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#ffffff",
          "borderColor": "#e0e0e0",
          "borderRadius": 2.5,
          "borderWidth": 1,
          "paddingRight": 5,
          "width": "100%",
        },
        Object {
          "borderColor": "#ef5160",
        },
        false,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
            "height": "auto",
          },
          false,
        ]
      }
    >
      <RCTPicker
        items={Array []}
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        selectedIndex={0}
        style={
          Array [
            Object {
              "height": 216,
            },
            undefined,
          ]
        }
      />
    </View>
  </View>
</View>
`;

exports[`<InputPicker> when {hint} 1`] = `
<View
  style={
    Array [
      Object {
        "marginBottom": 10,
        "overflow": "hidden",
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "#4a4a4a",
            "fontFamily": undefined,
            "fontWeight": "400",
            "textAlignVertical": "center",
          },
          Object {
            "fontSize": 14,
            "lineHeight": 24,
          },
          Object {
            "color": "#9b9b9b",
          },
          Object {},
        ]
      }
    />
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "#4a4a4a",
            "fontFamily": undefined,
            "fontWeight": "400",
            "textAlignVertical": "center",
          },
          Object {
            "fontSize": 12,
            "lineHeight": 17,
          },
          Object {
            "color": "#9b9b9b",
          },
          Object {},
        ]
      }
    >
      Hello World
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#ffffff",
          "borderColor": "#e0e0e0",
          "borderRadius": 2.5,
          "borderWidth": 1,
          "paddingRight": 5,
          "width": "100%",
        },
        undefined,
        false,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
            "height": "auto",
          },
          false,
        ]
      }
    >
      <RCTPicker
        items={Array []}
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        selectedIndex={0}
        style={
          Array [
            Object {
              "height": 216,
            },
            undefined,
          ]
        }
      />
    </View>
  </View>
</View>
`;

exports[`<InputPicker> when {label} 1`] = `
<View
  style={
    Array [
      Object {
        "marginBottom": 10,
        "overflow": "hidden",
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "#4a4a4a",
            "fontFamily": undefined,
            "fontWeight": "400",
            "textAlignVertical": "center",
          },
          Object {
            "fontSize": 14,
            "lineHeight": 24,
          },
          Object {
            "color": "#9b9b9b",
          },
          Object {},
        ]
      }
    >
      Hello World
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#ffffff",
          "borderColor": "#e0e0e0",
          "borderRadius": 2.5,
          "borderWidth": 1,
          "paddingRight": 5,
          "width": "100%",
        },
        undefined,
        false,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
            "height": "auto",
          },
          false,
        ]
      }
    >
      <RCTPicker
        items={Array []}
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        selectedIndex={0}
        style={
          Array [
            Object {
              "height": 216,
            },
            undefined,
          ]
        }
      />
    </View>
  </View>
</View>
`;

exports[`<InputPicker> when {style} 1`] = `
<View
  style={
    Array [
      Object {
        "marginBottom": 10,
        "overflow": "hidden",
      },
      Object {
        "backgroundColor": "rgba(0,255,0,0.25)",
        "padding": 10,
        "width": 256,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#ffffff",
          "borderColor": "#e0e0e0",
          "borderRadius": 2.5,
          "borderWidth": 1,
          "paddingRight": 5,
          "width": "100%",
        },
        undefined,
        false,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
            "height": "auto",
          },
          false,
        ]
      }
    >
      <RCTPicker
        items={Array []}
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        selectedIndex={0}
        style={
          Array [
            Object {
              "height": 216,
            },
            undefined,
          ]
        }
      />
    </View>
  </View>
</View>
`;

exports[`<InputPicker> when {value} 1`] = `
<View
  style={
    Array [
      Object {
        "marginBottom": 10,
        "overflow": "hidden",
      },
      undefined,
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#ffffff",
          "borderColor": "#e0e0e0",
          "borderRadius": 2.5,
          "borderWidth": 1,
          "paddingRight": 5,
          "width": "100%",
        },
        undefined,
        false,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
            "height": "auto",
          },
          false,
        ]
      }
    >
      <RCTPicker
        items={Array []}
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        selectedIndex={0}
        style={
          Array [
            Object {
              "height": 216,
            },
            undefined,
          ]
        }
      />
    </View>
  </View>
</View>
`;
