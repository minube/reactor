// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Button> renders 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "borderRadius": 3,
        "margin": 5,
      },
      undefined,
      false,
      undefined,
    ]
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Array [
        Object {
          "alignContent": "center",
          "alignItems": "center",
          "backgroundColor": "#4a4a4a",
          "borderRadius": 3,
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
        },
        Object {
          "height": 45,
          "paddingHorizontal": 30,
        },
        false,
        false,
        false,
        false,
        undefined,
        false,
        false,
        undefined,
      ]
    }
  />
</View>
`;

exports[`<Button> when {accent} 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "borderRadius": 3,
        "margin": 5,
      },
      false,
      false,
      undefined,
    ]
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Array [
        Object {
          "alignContent": "center",
          "alignItems": "center",
          "backgroundColor": "#4a4a4a",
          "borderRadius": 3,
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
        },
        Object {
          "height": 45,
          "paddingHorizontal": 30,
        },
        false,
        Object {
          "backgroundColor": "#f69a37",
        },
        false,
        false,
        false,
        false,
        false,
        undefined,
      ]
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      numberOfLines={undefined}
      style={
        Array [
          Object {
            "color": "#4a4a4a",
            "fontFamily": undefined,
          },
          false,
          Object {
            "fontWeight": "600",
          },
          false,
          false,
          Object {
            "fontSize": 16,
            "lineHeight": 20.8,
          },
          false,
          false,
          false,
          false,
          false,
          false,
          false,
          false,
          Object {
            "color": "#ffffff",
            "fontSize": 14,
          },
        ]
      }
    >
      Press me
    </Text>
  </View>
</View>
`;

exports[`<Button> when {activity} 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "borderRadius": 3,
        "margin": 5,
      },
      false,
      false,
      undefined,
    ]
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Array [
        Object {
          "alignContent": "center",
          "alignItems": "center",
          "backgroundColor": "#4a4a4a",
          "borderRadius": 3,
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
        },
        Object {
          "height": 45,
          "paddingHorizontal": 30,
        },
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        undefined,
      ]
    }
  >
    <ActivityIndicator
      animating={true}
      color="#ffffff"
      hidesWhenStopped={true}
      size="small"
      style={
        Object {
          "marginRight": 10,
        }
      }
      type="small"
    />
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      numberOfLines={undefined}
      style={
        Array [
          Object {
            "color": "#4a4a4a",
            "fontFamily": undefined,
          },
          false,
          Object {
            "fontWeight": "600",
          },
          false,
          false,
          Object {
            "fontSize": 16,
            "lineHeight": 20.8,
          },
          false,
          false,
          false,
          false,
          false,
          false,
          false,
          false,
          Object {
            "color": "#ffffff",
            "fontSize": 14,
          },
        ]
      }
    >
      Press me
    </Text>
  </View>
</View>
`;

exports[`<Button> when {children} 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "borderRadius": 3,
        "margin": 5,
      },
      undefined,
      false,
      undefined,
    ]
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Array [
        Object {
          "alignContent": "center",
          "alignItems": "center",
          "backgroundColor": "#4a4a4a",
          "borderRadius": 3,
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
        },
        Object {
          "height": 45,
          "paddingHorizontal": 30,
        },
        false,
        false,
        false,
        false,
        undefined,
        false,
        false,
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "row",
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        numberOfLines={undefined}
        style={
          Array [
            Object {
              "color": "#4a4a4a",
              "fontFamily": undefined,
            },
            false,
            false,
            Object {
              "fontWeight": "bold",
            },
            false,
            Object {
              "fontSize": 16,
              "lineHeight": 20.8,
            },
            false,
            false,
            Object {
              "fontSize": 20,
              "lineHeight": 26,
            },
            false,
            false,
            false,
            false,
            false,
            Object {},
          ]
        }
      >
        10
      </Text>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        numberOfLines={undefined}
        style={
          Array [
            Object {
              "color": "#4a4a4a",
              "fontFamily": undefined,
            },
            false,
            false,
            false,
            false,
            Object {
              "fontSize": 16,
              "lineHeight": 20.8,
            },
            false,
            false,
            Object {
              "fontSize": 20,
              "lineHeight": 26,
            },
            false,
            false,
            false,
            false,
            false,
            Object {
              "transform": Array [
                Object {
                  "scale": 0.8,
                },
              ],
            },
          ]
        }
      >
        â‚¬
      </Text>
    </View>
  </View>
</View>
`;

exports[`<Button> when {color} 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "borderRadius": 3,
        "margin": 5,
      },
      false,
      false,
      undefined,
    ]
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Array [
        Object {
          "alignContent": "center",
          "alignItems": "center",
          "backgroundColor": "#4a4a4a",
          "borderRadius": 3,
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
        },
        Object {
          "height": 45,
          "paddingHorizontal": 30,
        },
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        Object {
          "backgroundColor": "red",
        },
      ]
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      numberOfLines={undefined}
      style={
        Array [
          Object {
            "color": "#4a4a4a",
            "fontFamily": undefined,
          },
          false,
          Object {
            "fontWeight": "600",
          },
          false,
          false,
          Object {
            "fontSize": 16,
            "lineHeight": 20.8,
          },
          false,
          false,
          false,
          false,
          false,
          false,
          false,
          false,
          Object {
            "color": "#ffffff",
            "fontSize": 14,
          },
        ]
      }
    >
      Press me
    </Text>
  </View>
</View>
`;

exports[`<Button> when {disabled} 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "borderRadius": 3,
        "margin": 5,
      },
      false,
      false,
      undefined,
    ]
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Array [
        Object {
          "alignContent": "center",
          "alignItems": "center",
          "backgroundColor": "#4a4a4a",
          "borderRadius": 3,
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
        },
        Object {
          "height": 45,
          "paddingHorizontal": 30,
        },
        false,
        false,
        false,
        false,
        false,
        false,
        Object {
          "backgroundColor": "#dbdbdb",
          "borderWidth": 0,
        },
        undefined,
      ]
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      numberOfLines={undefined}
      style={
        Array [
          Object {
            "color": "#4a4a4a",
            "fontFamily": undefined,
          },
          false,
          Object {
            "fontWeight": "600",
          },
          false,
          false,
          Object {
            "fontSize": 16,
            "lineHeight": 20.8,
          },
          false,
          false,
          false,
          false,
          false,
          false,
          false,
          false,
          Object {
            "color": "#ffffff",
            "fontSize": 14,
            "opacity": 0.75,
          },
        ]
      }
    >
      Press me
    </Text>
  </View>
</View>
`;

exports[`<Button> when {flat} 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "borderRadius": 3,
        "margin": 5,
      },
      false,
      false,
      undefined,
    ]
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Array [
        Object {
          "alignContent": "center",
          "alignItems": "center",
          "backgroundColor": "#4a4a4a",
          "borderRadius": 3,
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
        },
        Object {
          "height": 45,
          "paddingHorizontal": 30,
        },
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        Object {
          "backgroundColor": "#ffffff",
          "borderColor": "#9b9b9b",
          "borderWidth": 1,
        },
      ]
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      numberOfLines={undefined}
      style={
        Array [
          Object {
            "color": "#4a4a4a",
            "fontFamily": undefined,
          },
          false,
          Object {
            "fontWeight": "600",
          },
          false,
          false,
          Object {
            "fontSize": 16,
            "lineHeight": 20.8,
          },
          false,
          false,
          false,
          false,
          false,
          false,
          false,
          false,
          Object {
            "color": "#9b9b9b",
            "fontSize": 14,
          },
        ]
      }
    >
      Press me
    </Text>
  </View>
</View>
`;

exports[`<Button> when {icon} & {title} 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "borderRadius": 3,
        "margin": 5,
      },
      false,
      false,
      undefined,
    ]
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Array [
        Object {
          "alignContent": "center",
          "alignItems": "center",
          "backgroundColor": "#4a4a4a",
          "borderRadius": 3,
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
        },
        Object {
          "height": 45,
          "paddingHorizontal": 30,
        },
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        undefined,
      ]
    }
  >
    <Image
      resizeMode="contain"
      source={
        Object {
          "testUri": "../../../components/Icon/assets/apps.png",
        }
      }
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "height": 20,
            "width": 20,
          },
          Object {
            "height": 16,
            "marginRight": 10,
            "width": 16,
          },
          undefined,
        ]
      }
    />
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      numberOfLines={undefined}
      style={
        Array [
          Object {
            "color": "#4a4a4a",
            "fontFamily": undefined,
          },
          false,
          Object {
            "fontWeight": "600",
          },
          false,
          false,
          Object {
            "fontSize": 16,
            "lineHeight": 20.8,
          },
          false,
          false,
          false,
          false,
          false,
          false,
          false,
          false,
          Object {
            "color": "#ffffff",
            "fontSize": 14,
          },
        ]
      }
    >
      Press me
    </Text>
  </View>
</View>
`;

exports[`<Button> when {icon} 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "borderRadius": 3,
        "margin": 5,
      },
      Object {
        "borderRadius": 30,
        "height": 60,
        "paddingHorizontal": 0,
        "width": 60,
      },
      false,
      undefined,
    ]
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Array [
        Object {
          "alignContent": "center",
          "alignItems": "center",
          "backgroundColor": "#4a4a4a",
          "borderRadius": 3,
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
        },
        Object {
          "height": 45,
          "paddingHorizontal": 30,
        },
        false,
        false,
        false,
        false,
        Object {
          "borderRadius": 30,
          "height": 60,
          "paddingHorizontal": 0,
          "width": 60,
        },
        false,
        false,
        undefined,
      ]
    }
  >
    <Image
      resizeMode="contain"
      source={
        Object {
          "testUri": "../../../components/Icon/assets/apps.png",
        }
      }
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "height": 20,
            "width": 20,
          },
          Object {
            "height": 20,
            "width": 20,
          },
          undefined,
        ]
      }
    />
  </View>
</View>
`;

exports[`<Button> when {responsive} 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "borderRadius": 3,
        "margin": 5,
      },
      false,
      false,
      undefined,
    ]
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Array [
        Object {
          "alignContent": "center",
          "alignItems": "center",
          "backgroundColor": "#4a4a4a",
          "borderRadius": 3,
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
        },
        Object {
          "height": 45,
          "paddingHorizontal": 30,
        },
        false,
        false,
        false,
        Object {
          "height": 45,
          "paddingHorizontal": 30,
        },
        false,
        false,
        false,
        undefined,
      ]
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      numberOfLines={undefined}
      style={
        Array [
          Object {
            "color": "#4a4a4a",
            "fontFamily": undefined,
          },
          false,
          Object {
            "fontWeight": "600",
          },
          false,
          false,
          Object {
            "fontSize": 16,
            "lineHeight": 20.8,
          },
          false,
          false,
          false,
          false,
          false,
          false,
          false,
          false,
          Object {
            "color": "#ffffff",
            "fontSize": 14,
            "lineHeight": 16.8,
          },
        ]
      }
    >
      Press me
    </Text>
  </View>
</View>
`;

exports[`<Button> when {rounded} 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "borderRadius": 3,
        "margin": 5,
      },
      false,
      Object {
        "borderRadius": 22.5,
      },
      undefined,
    ]
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Array [
        Object {
          "alignContent": "center",
          "alignItems": "center",
          "backgroundColor": "#4a4a4a",
          "borderRadius": 3,
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
        },
        Object {
          "height": 45,
          "paddingHorizontal": 30,
        },
        false,
        false,
        false,
        false,
        false,
        Object {
          "borderRadius": 22.5,
        },
        false,
        undefined,
      ]
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      numberOfLines={undefined}
      style={
        Array [
          Object {
            "color": "#4a4a4a",
            "fontFamily": undefined,
          },
          false,
          Object {
            "fontWeight": "600",
          },
          false,
          false,
          Object {
            "fontSize": 16,
            "lineHeight": 20.8,
          },
          false,
          false,
          false,
          false,
          false,
          false,
          false,
          false,
          Object {
            "color": "#ffffff",
            "fontSize": 14,
          },
        ]
      }
    >
      Press me
    </Text>
  </View>
</View>
`;

exports[`<Button> when {small} 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "borderRadius": 3,
        "margin": 5,
      },
      false,
      false,
      undefined,
    ]
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Array [
        Object {
          "alignContent": "center",
          "alignItems": "center",
          "backgroundColor": "#4a4a4a",
          "borderRadius": 3,
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
        },
        Object {
          "height": 45,
          "paddingHorizontal": 30,
        },
        false,
        false,
        Object {
          "height": 30,
          "paddingHorizontal": 15,
        },
        false,
        false,
        false,
        false,
        undefined,
      ]
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      numberOfLines={undefined}
      style={
        Array [
          Object {
            "color": "#4a4a4a",
            "fontFamily": undefined,
          },
          false,
          Object {
            "fontWeight": "600",
          },
          false,
          false,
          Object {
            "fontSize": 16,
            "lineHeight": 20.8,
          },
          false,
          false,
          false,
          false,
          false,
          false,
          false,
          false,
          Object {
            "color": "#ffffff",
            "fontSize": 12,
          },
        ]
      }
    >
      Press me
    </Text>
  </View>
</View>
`;

exports[`<Button> when {style} 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "borderRadius": 3,
        "margin": 5,
      },
      false,
      false,
      Object {
        "backgroundColor": "orange",
      },
    ]
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Array [
        Object {
          "alignContent": "center",
          "alignItems": "center",
          "backgroundColor": "#4a4a4a",
          "borderRadius": 3,
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
        },
        Object {
          "height": 45,
          "paddingHorizontal": 30,
        },
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        undefined,
      ]
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      numberOfLines={undefined}
      style={
        Array [
          Object {
            "color": "#4a4a4a",
            "fontFamily": undefined,
          },
          false,
          Object {
            "fontWeight": "600",
          },
          false,
          false,
          Object {
            "fontSize": 16,
            "lineHeight": 20.8,
          },
          false,
          false,
          false,
          false,
          false,
          false,
          false,
          false,
          Object {
            "color": "#ffffff",
            "fontSize": 14,
          },
        ]
      }
    >
      Press me
    </Text>
  </View>
</View>
`;

exports[`<Button> when {title} 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "borderRadius": 3,
        "margin": 5,
      },
      false,
      false,
      undefined,
    ]
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Array [
        Object {
          "alignContent": "center",
          "alignItems": "center",
          "backgroundColor": "#4a4a4a",
          "borderRadius": 3,
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
        },
        Object {
          "height": 45,
          "paddingHorizontal": 30,
        },
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        undefined,
      ]
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      numberOfLines={undefined}
      style={
        Array [
          Object {
            "color": "#4a4a4a",
            "fontFamily": undefined,
          },
          false,
          Object {
            "fontWeight": "600",
          },
          false,
          false,
          Object {
            "fontSize": 16,
            "lineHeight": 20.8,
          },
          false,
          false,
          false,
          false,
          false,
          false,
          false,
          false,
          Object {
            "color": "#ffffff",
            "fontSize": 14,
          },
        ]
      }
    >
      Press me
    </Text>
  </View>
</View>
`;
